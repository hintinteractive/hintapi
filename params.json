{"name":"Hint Api","tagline":"","body":"#API Specification\r\nThis document specifies the backend REST API and backend designs for Hint. The frontend developers can refer to this.\r\n\r\n## Enums\r\n\r\n- `enum_user_statuses` :\r\n\r\n\t\t{\r\n\t\t\tadmin : 'admin',\r\n\t\t\tactive : 'active',\r\n\t\t\tinactive : 'inactive',\r\n\t\t\tbanned : 'banned',\r\n\t\t\tdebug : 'debug'\r\n\t\t}\r\n\r\n- `enum_hint_statuses` :\r\n\r\n\t\t{\r\n\t\t\tsent : 'sent',\r\n\t\t\taccepted : 'accepted'\r\n\t\t}\r\n\r\n- `enum_flirt_statuses` :\r\n\r\n\t\t{\r\n\t\t\tsent : 'sent',\r\n\t\t\taccepted : 'accepted',\r\n\t\t\trejected : 'rejected'\r\n\t\t}\r\n\r\n- `enum_user_genders` :\r\n\r\n\t\t{\r\n\t\t\tmale : 'male',\r\n\t\t\tfemale : 'female',\r\n\t\t\tother : 'other',\r\n\t\t\tundefined : 'undefined'\r\n\t\t}\r\n\r\n- `enum_user_hair_colors` :\r\n\r\n\t\t{\r\n\t\t\tlight : 'light',\r\n\t\t\tdark : 'dark',\r\n\t\t\tundefined: 'undefined'\r\n\t\t}\r\n\r\n- `enum_expiries` :\r\n\r\n\t\t{\r\n\t\t\tcurrent_look : 24,\r\n\t\t\tevent: 24,\r\n\t\t\tconnection: 24,\r\n\t\t\tcheckin: 4,\r\n\t\t\tflirt: 24,\r\n\t\t\thint: 24\r\n\t\t}\r\n\r\n- `enum_flags` :\r\n\r\n\t\t{\r\n\t\t\tcollect_venue_category : true\r\n\t\t}\r\n\r\n- `enum_defaults` :\r\n\r\n\t\t{\r\n\t\t\tvenue_categoty: {\r\n\t\t\t\tflirt_options : {\r\n\t\t\t\t\tsimple:'',\r\n\t\t\t\t\tforward:'',\r\n\t\t\t\t\trisky:''\r\n\t\t\t\t},\r\n\t\t\t\timage:''\r\n\t\t\t},\r\n\t\t\tvenue_search_results : 35,\r\n\t\t\tcheckin_search_results : 20\r\n\t\t}\r\n\r\n\r\n## Models\r\n\r\n- `api_access` :\r\n\t- Collection name : `api_accesses`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tsocial_id: String\r\n\t\t\t\t},\r\n\t\t\t\tapi_name: String,\r\n\t\t\t\t'method': {type: String, \"default\": 'GET'},\r\n\t\t\t\taccess_time: {type: Date, \"default\": Date.now}\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t- Add a entry to this collection every time a api end point is accessed.\r\n\t\t- Write heavy, read only needs for analytics purpose.\r\n\r\n- `venue_category` :\r\n\t- Collection name : `venue_categories`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tsocial_id : { type: String, index: { unique: true}},\r\n\t\t\t\tname : String,\r\n\t\t\t\tflirt_options : {\r\n\t\t\t\t\tsimple : String,\r\n\t\t\t\t\tforward : String,\r\n\t\t\t\t\trisky : String\r\n\t\t\t\t},\r\n\t\t\t\timage: String\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t- Search the collection with a list of social_category.id for each GET /api/venue call.\r\n\t\t- Read heavy (normal situations).\r\n\t\t- Read and Write heavy (when enum_flags.collect_venue_category is true)\r\n\r\n- `user` :\r\n\t- Collection name : `users`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tsocial_id : { type: String, index: { unique: true}},\r\n\t\t\t\tname : String,\r\n\t\t\t\tcontact: {\r\n\t\t\t\t\temail : String,\r\n\t\t\t\t\tphone : String\r\n\t\t\t\t},\r\n\t\t\t\thair_color : String,\r\n\t\t\t\tgender : String,\r\n\t\t\t\tinterested_in : [String],\r\n\t\t\t\tstatus : String,\r\n\t\t\t\tblack_list : [String],\r\n\t\t\t\tphoto_url: String\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n- `event` :\r\n\t- Collection name : `events`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tsocial_id: { type: String, index: { unique: true}},\r\n\t\t\t\ttitle : String,\r\n\t\t\t\tsocial_venue: {\r\n\t\t\t\t\tsocial_id: String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String,\r\n\t\t\t\t\timage : String\r\n\t\t\t\t},\r\n\t\t\t\towners:[{\r\n\t\t\t\t\tuser :{\r\n\t\t\t\t\t\tsocial_id : String\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tstart : Date,\r\n\t\t\t\texpiry : Date,\r\n\t\t\t\tflirt_options : {\r\n\t\t\t\t\tsimple : String,\r\n\t\t\t\t\tforward : String,\r\n\t\t\t\t\trisky : String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n- `checkin` :\r\n\t- Collection name : `checkins`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t    user : {\r\n\t\t\t        social_id : String,\r\n\t\t\t        name : String,\r\n\t\t\t        hair_color : String,\r\n\t\t\t        gender : String,\r\n\t\t\t        interested_in : [String],\r\n\t\t\t        current_look : {\r\n\t\t\t            photo_url : String,\r\n\t\t\t            identifier: {\r\n\t\t\t                type : String,\r\n\t\t\t                brand : String,\r\n\t\t\t                color : String\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    },\r\n\t\t\t    event : {\r\n\t\t\t        social_id : String,\r\n\t\t\t        title : String\r\n\t\t\t    },\r\n\t\t\t    social_venue : {\r\n\t\t\t        social_id : String,\r\n\t\t\t        name : String,\r\n\t\t\t        address : String,\r\n\t\t\t        image : String\r\n\t\t\t    },\r\n\t\t\t    flirt_options : {\r\n\t\t\t        simple : String,\r\n\t\t\t        forward : String,\r\n\t\t\t        risky : String\r\n\t\t\t    },\r\n\t\t\t    time : {type: Date, \"default\": Date.now},\r\n\t\t\t    expiry : Date,\r\n\t\t\t    flirts : {\r\n\t\t\t    \ttype: [{\r\n\t\t\t\t        user:{\r\n\t\t\t\t            social_id : String\r\n\t\t\t\t        }\r\n\t\t\t\t    }],\r\n\t\t\t\t    \"default\": []\r\n\t\t\t\t},\r\n\t\t\t  hints : {\r\n\t\t\t    \ttype: [{\r\n\t\t\t\t        user:{\r\n\t\t\t\t            social_id : String\r\n\t\t\t\t        }\r\n\t\t\t\t    }],\r\n\t\t\t\t    \"default\": []\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n- `hint` :\r\n\t- Collection name : `hints`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tcheckin : {\r\n\t\t\t\t\tid: String\r\n\t\t\t\t},\r\n\t\t\t\tuser_from : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tuser_to : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t},\r\n\t\t\t\tstatus : String,\r\n\t\t\t\ttime : {type: Date, \"default\": Date.now},\r\n\t\t\t\texpiry : Date\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n- `flirt` :\r\n\t- Collection name : `flirts`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tcheckin : {\r\n\t\t\t\t\tid: String\r\n\t\t\t\t},\r\n\t\t\t\tuser_from : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tuser_to : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t},\r\n\t\t\t\tflirt_options : {\r\n\t\t\t\t\ttype: String,\r\n\t\t\t\t\ttext: String\r\n\t\t\t\t},\r\n\t\t\t\tstatus : String,\r\n\t\t\t\ttime : {type: Date, \"default\": Date.now},\r\n\t\t\t\texpiry : Date\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n\r\n- `connection` :\r\n\t- Collection name : `connections`\r\n\t- Schema :\r\n\r\n\t\t\t{\r\n\t\t\t\tusers: [{\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t},\r\n\t\t\t\tmessages : [{\r\n\t\t\t\t\tuser :{\r\n\t\t\t\t\t\tsocial_id : String\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: String,\r\n\t\t\t\t\ttime: Date\r\n\t\t\t\t}],\r\n\t\t\t\tkeep_alive : {\r\n\t\t\t\t\tflag : Boolean,\r\n\t\t\t\t\tuser :{\r\n\t\t\t\t\t\tsocial_id : String\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttime : Date,\r\n\t\t\t\texpiry : Date\r\n\t\t\t}\r\n\r\n\t- Additional Info:\r\n\t\t-\r\n\r\n\r\n\r\n## API Endpoints\r\n\r\n- `POST /login/facebook` : login the user to our system\r\n\r\n\t1. Trigger:\r\n\t\t- Login:\r\n\t\t\t-\tclick login button,\r\n\t\t\t-\tfire up facebook sdk\r\n\t\t\t-\tafter successful login with basic permissions\r\n\t\t\t-\treceives the access_token from facebook\r\n\t\t\t-\tcall this endpoint with the access_token.\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\taccess_token : \"facebook_access_token\"\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tuser: {\r\n\t\t\t\t\tuserId : \"Facebook:fb_id\"\r\n\t\t\t\t},\r\n\t\t\t\tauthenticationToken: 'auth_token'\r\n\t\t\t}\r\n\r\n\t6. After Action :\r\n\t\t-\tCall `GET /api/user `upon successful login, and from the response, update the current user info in the client (mobile app memory).\r\n\t\t-\tCache the authenticationToken, i.e., auth_token as it is required for each api call.\r\n\r\n\t7. Additional Info:\r\n\t\t-\tauth_token is valid for 30 days.\r\n\t\t-\tWhen calling any api with auth_token, if you get 401 unauthorized then log off the user.\r\n\t\t-\tMake sure you use basic permission only when log in with the facebook sdk.\r\n\r\n- `GET /api/user` : get the current user info, if user doesn't exists call facebook and update user info\r\n\r\n\t1. Trigger:\r\n\t\t-\tAfter user login to the system (after action for `POST  /login/facebook` API call).\r\n\t\t-\tUser enters the user settings page (because a refresh to the user info happens on enter).\r\n\t\t-\tUser refresh his information (by pulling down the listview).\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tid : String,\r\n\t\t\t\tsocial_id : String,\r\n\t\t\t\tname : String,\r\n\t\t\t\tcontact: {\r\n\t\t\t\t\temail : String,\r\n\t\t\t\t\tphone : String\r\n\t\t\t\t},\r\n\t\t\t\thair_color : String,\r\n\t\t\t\tgender : String,\r\n\t\t\t\tinterested_in : [String],\r\n\t\t\t\tstatus : String,\r\n\t\t\t\tblack_list : [String],\r\n\t\t\t\tphoto_url: String\r\n\t\t\t}\r\n\r\n\t6. After Action :\r\n\t\t-\tIf the user status is `enum_user_statuses.banned`, show a message saying that he is banned from the app and log him out.\r\n\t\t-\tIf the user status is `enum_user_statuses.admin`, show the admin panel otherwise hide the admin panel.\r\n\t\t-\tUpdate the user's info in the app memory.\r\n\r\n\t7. Additional Info:\r\n\t\t-\t(Server Side) Get the user from database from the userid embedded in the header.\r\n\t\t\t-\tIf the user doesn't exists, call facebook with the access_token (embedded in the header) to get user's basic info and update the database with info from facebook.\r\n\t\t\t-\tIf the user exists but his status is inactive then update the database and make the status active.\r\n\t\t\t-\tReturn user's info.\r\n\r\n- `PATCH /api/user` : update the user's info\r\n\r\n\t1. Trigger:\r\n\t\t-\tUser updates his info in the user settings page.\r\n\t\t-\tUser uploads a photo (only if the url is different, trigger this call).\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body: (all of these properties are optional)\r\n\r\n\t\t\t{\r\n\t\t\t\tname : String,\r\n\t\t\t\tcontact: {\r\n\t\t\t\t\temail : String,\r\n\t\t\t\t\tphone : String\r\n\t\t\t\t},\r\n\t\t\t\thair_color : String,\r\n\t\t\t\tgender : String,\r\n\t\t\t\tinterested_in : [String],\r\n\t\t\t\tphoto_url: String\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response: (updated user)\r\n\r\n\t\t\t{\r\n\t\t\t\tid : String,\r\n\t\t\t\tsocial_id : String,\r\n\t\t\t\tname : String,\r\n\t\t\t\tcontact: {\r\n\t\t\t\t\temail : String,\r\n\t\t\t\t\tphone : String\r\n\t\t\t\t},\r\n\t\t\t\thair_color : String,\r\n\t\t\t\tgender : String,\r\n\t\t\t\tinterested_in : [String],\r\n\t\t\t\tstatus : String,\r\n\t\t\t\tblack_list : [String],\r\n\t\t\t\tphoto_url: String\r\n\t\t\t}\r\n\t6. After Action :\r\n\t\t-\tUpdate the user's info in the app memory.\r\n\t7. Additional Info:\r\n\t\t-\tProvide the property you want to update in the request body (if a property is missing then it keeps its original value).\r\n\t\t-\t(Server side) The user id is extracted from the X-ZUMO-AUTH header.\r\n\r\n- `DELETE /api/user` : deactivite a user\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser clicks the deactivate account button.\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n\t6. After Action :\r\n\t\t-\tLog off the user.\r\n\r\n\t7. Additional Info:\r\n\t\t-\t(Server side) The user id is extracted from the X-ZUMO-AUTH header.\r\n\r\n\r\n- `GET /api/venue` : get a list of venues\r\n\r\n\t1. Trigger:\r\n\t\t-\tUser enters the Near By Places page.\r\n\t\t-\tUser refresh the Near By Places page (by pulling down the listview)\r\n\t\t-\tUser search for venues.\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tlat : 'user lat',\r\n\t\t\t\tlng : 'user lng',\r\n\t\t\t\tsearch : 'search string',\r\n\t\t\t\tlimit : 'number of results, default enum_defaults.venue_search_results',\r\n\t\t\t\tradius : 'radius of the search'\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t4. Response:\r\n\r\n\t\t\t[{\r\n\t\t\t\tsocial_id : 'Facebook:fb_id',\r\n\t\t\t\tname : 'name of the place',\r\n\t\t\t\taddress : 'address of the place',\r\n\t\t\t\tdistance: 'calculated distance in miles',\r\n\t\t\t\tcategory: {\r\n\t\t\t\t\tflirt_options : {\r\n\t\t\t\t\t\tsimple : 'simple flirt',\r\n\t\t\t\t\t\tforward : 'forward flirt',\r\n\t\t\t\t\t\trisky : 'risky flirt'\r\n\t\t\t\t\t}\r\n\t\t\t\t\timage : 'image link'\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\r\n\t5. Additional Info:\r\n\t\t-\tThe response array will be sorted by distance.\r\n\t\t-\t`lat` and `lng` parameters are required.\r\n\t\t-\tif `search` parameter is not provided then search in all.\r\n\t\t-\tif `limit` parameter is not provided then use `enum_defaults.venue_search_results`.\r\n\t\t-\tif `radius` is not provided then the area where to search is not enforced.\r\n\t\t-\t(Server side) Implementation details:\r\n\t\t\t-\tGet the venue list from facebook.\r\n\t\t\t-\tA typical facebook venue object is of the following format:\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"category\": \"Health/beauty\",\r\n\t\t\t\t\t\t\t\"category_list\": [{\r\n\t\t\t\t\t\t\t\t\"id\": \"139225689474222\",\r\n\t\t\t\t\t\t\t\t\"name\": \"Spa, Beauty & Personal Care\"\r\n\t\t\t\t\t\t\t}],\r\n\t\t\t\t\t\t\t\"location\": {\r\n\t\t\t\t\t\t\t\t\"street\": \"225 Bush St, 20th Floor\",\r\n\t\t\t\t\t\t\t\t\"city\": \"San Francisco\",\r\n\t\t\t\t\t\t\t\t\"state\": \"CA\",\r\n\t\t\t\t\t\t\t\t\"country\": \"United States\",\r\n\t\t\t\t\t\t\t\t\"zip\": \"94104\",\r\n\t\t\t\t\t\t\t\t\"latitude\": 37.791090500712,\r\n\t\t\t\t\t\t\t\t\"longitude\": -122.40105336454\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"name\": \"Benefit Cosmetics\",\r\n\t\t\t\t\t\t\t\"id\": \"48879913147\"\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t-\tAfter receiving the venue list, query our database to get the category info.\r\n\t\t\t-\tIf the category is not found, return the enum_defaults.venue_categoty\r\n\t\t\t-\tIf the category is not found and enum_flags.collect_venue_category is true, then update the venue_categories collection with enum_defaults.venue_categoty for this category and return it.  \r\n\t\t\t-\tConstruct the response object from these info.\r\n\r\n\r\n- `POST /api/checkin` : checkin to a venue\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser clicks the checkin button\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\tuser : {\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tevent : {\r\n\t\t\t\t    social_id: String,\r\n\t\t\t\t    title : String,\r\n\t\t\t\t    social_venue: {\r\n\t\t\t\t        social_id: String,\r\n\t\t\t\t        name : String,\r\n\t\t\t\t        address : String,\r\n\t\t\t\t        image : String\r\n\t\t\t\t    },\r\n\t\t\t\t    start : Date,\r\n\t\t\t\t    expiry : Date,\r\n\t\t\t\t    flirt_options : {\r\n\t\t\t\t        simple : String,\r\n\t\t\t\t        forward : String,\r\n\t\t\t\t        risky : String\r\n\t\t\t\t    }\r\n\t\t\t\t},\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t   social_id : 'Facebook:fb_id',\r\n\t\t\t\t   name : 'name of the place',\r\n\t\t\t\t   address : 'address of the place',\r\n\t\t\t\t   category: {\r\n\t\t\t\t       flirt_options : {\r\n\t\t\t\t           simple : 'simple flirt',\r\n\t\t\t\t           forward : 'forward flirt',\r\n\t\t\t\t           risky : 'risky flirt'\r\n\t\t\t\t       }\r\n\t\t\t\t       image : 'image link'\r\n\t\t\t\t   }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n\t6. Additional Info:\r\n\t\t- user.social_id is filled up by the server, all the other info will be available in the client.\r\n\t\t- If the event object is present (social_venue is ignored), then the necessary info for the collection will be taken from the event object. However, the expiry can be no more than enum_expiries.event.\r\n\t\t- If the event object is null, social_venue object will be used for the necessary info for the collection, the missing info will be taken from the enums.\r\n\t\t- Trying to check into an event before its start time will generate an internal server error.\r\n\t\t- The time field of the collection will be current system time.\r\n\t\t- If one of event.social_venue.social_id and social_venue.social_id is not provided, then an internal server error will be generated.\r\n\t\t- received_flirts and received_hints will be empty arrays.\r\n\r\n- `PATCH /api/checkin` : add to received_flirts and received_hints array\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser sends a hint\r\n\t\t-\tuser sends a flirt\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tid: 'MongoDB ObjectId'\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\tflirt:{\r\n\t\t\t\t\tuser:{\r\n\t\t\t\t\t  social_id : String\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\thint:{\r\n\t\t\t\t\tuser:{\r\n\t\t\t\t\t  social_id : String\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n- `GET /api/checkin` : get a list of checkins for a venue\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser comes to the \"Who is Here?\" landing page.\r\n\t\t-\trefresh of the \"Who is Here?\" landing page.\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tsocial_venue_id: 'Facebook:id',\r\n                event_social_id: 'facebook:id',\r\n\t\t\t\thair_color : 'optional: if not provided ignore',\r\n                interested_in : [String],\r\n                search : 'search string in identifier',\r\n\t\t\t\tlimit : 'number of results, default enum_defaults.checkin_search_results',\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t[{\r\n\t\t      user : {\r\n\t\t          social_id : String,\r\n\t\t          name : String,\r\n\t\t          hair_color : String,\r\n\t\t          gender : String,\r\n\t\t          interested_in : [String],\r\n\t\t          current_look : {\r\n\t\t              photo_url : String,\r\n\t\t              identifier: {\r\n\t\t                  type : String,\r\n\t\t                  brand : String,\r\n\t\t                  color : String\r\n\t\t              }\r\n\t\t          }\r\n\t\t      },\r\n\t\t      event : {\r\n\t\t          social_id : String,\r\n\t\t          title : String\r\n\t\t      },\r\n\t\t      social_venue : {\r\n\t\t          social_id : String,\r\n\t\t          name : String,\r\n\t\t          address : String,\r\n\t\t          image : String\r\n\t\t      },\r\n\t\t      flirt_options : {\r\n\t\t          simple : String,\r\n\t\t          forward : String,\r\n\t\t          risky : String\r\n\t\t      },\r\n\t\t      time : Date,\r\n\t\t      expiry : Date,\r\n\t\t      received_flirts : [{\r\n\t\t          user:{\r\n\t\t              social_id : String\r\n\t\t          }\r\n\t\t      }],\r\n\t\t      received_hints : [{\r\n\t\t          user:{\r\n\t\t              social_id : String\r\n\t\t          }\r\n\t\t      }]\r\n\t\t\t}]\r\n\r\n\t5. Additional Info:\r\n\t\t-\tif event_social_id is provided, search with it, otherwise search checkins with social_venue_id, if none provided a 500 error is generated.\r\n\t\t-\tif limit parameter is not provided, then enum_defaults.checkin_search_results is used to determine how many checkins will be returned.\r\n        -   if interested_in,hair_color,search are not provided then search all.\r\n        -   TODO: optimize the search\r\n\r\n- `POST /api/flirt` : sends a flirt\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser sends a flirt to another user\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\tcheckin : {\r\n\t\t\t\t\tid: String\r\n\t\t\t\t},\r\n\t\t\t\tuser_from : {\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tuser_to : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t},\r\n\t\t\t\tflirt_options : {\r\n\t\t\t\t\ttype: String,\r\n\t\t\t\t\ttext: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n\t6. Additional Info:\r\n\t\t- user_from.social_id will be filled out by the server (current login)\r\n\t\t- flirt_options.type is either simple, forward, or risky\r\n\t\t- status will be enum_flirt_statuses.sent\r\n\t\t- time will be current system time\r\n\t\t- expiry will br set according to enum_expiries.flirt\r\n\t\t- sends a push notification to the recipient.\r\n\t\t- patch the checkin collection to add to sent_flirts\r\n\r\n- `PATCH /api/flirt` : user accepts or rejects a flirt\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser accepts a flirt\r\n\t\t-\tuser rejects a flirt\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tid: 'MongoDB ObjectId'\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\taction: 'accept or reject'\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\t6. Additional Info:\r\n\t\t- if  action == 'accept', change status=enum_flirt_statuses.accepted, create a connection, send a push notification to the other person.\r\n\t\t- if  action == 'reject', change status=enum_flirt_statuses.rejected, send a push notification to the other person.\r\n\r\n- `POST /api/hint` : sends a hint\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser sends a hint to another user\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\tuser_from : {\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tuser_to : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n\t6. Additional Info:\r\n\t\t- user_from.social_id will be filled out by the server (current login)\r\n\t\t- status will be enum_hint_statuses.sent\r\n\t\t- time will be current system time\r\n\t\t- expiry will br set according to enum_expiries.hint\r\n\t\t- patch the checkin collection to add to sent_hint.\r\n\t\t- run the connection algorithm (check if there is an un-expired hint from the other person in the same venue)\r\n\t\t- if a connection is created, sends a push notification to both, otherwise send it to the recipient.\r\n\r\n- `GET /api/connection` : get a list of connections\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser open up the right menu.\r\n\t\t-\tuser click on a connection.\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tid : 'optional, id of the connection, if provided the result array will have at most 1 element'\r\n\t\t\t}\r\n\r\n\t3. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t4. Response:\r\n\r\n\t\t\t[{\r\n\t\t\t\tusers: [{\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\thair_color : String,\r\n\t\t\t\t\tgender : String,\r\n\t\t\t\t\tinterested_in : [String],\r\n\t\t\t\t\tcurrent_look : {\r\n\t\t\t\t\t\tphoto_url : String,\r\n\t\t\t\t\t\tidentifier: {\r\n\t\t\t\t\t\t\ttype : String,\r\n\t\t\t\t\t\t\tbrand : String,\r\n\t\t\t\t\t\t\tcolor : String\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tsocial_venue : {\r\n\t\t\t\t\tsocial_id : String,\r\n\t\t\t\t\tname : String,\r\n\t\t\t\t\taddress : String\r\n\t\t\t\t},\r\n\t\t\t\tmessages : [{\r\n\t\t\t\t\tuser :{\r\n\t\t\t\t\t\tsocial_id : String\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: String,\r\n\t\t\t\t\ttime: Date\r\n\t\t\t\t}],\r\n\t\t\t\tkeep_alive : {\r\n\t\t\t\t\tflag : Boolean,\r\n\t\t\t\t\tuser :{\r\n\t\t\t\t\t\tsocial_id : String\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ttime : Date,\r\n\t\t\t\texpiry : Date\r\n\t\t\t}]\r\n\r\n\t5. Additional Info:\r\n\t\t-\tfilter unexpired connection by current logged in user_id and connection_id (if provided)\r\n\r\n- `PATCH /api/connection` : user sends a message(TODO: update expiry, and ask to keep connection alive)\r\n\r\n\t1. Trigger:\r\n\t\t-\tuser sends a message\r\n\r\n\t2. Request param:\r\n\r\n\t\t\t{\r\n\t\t\t\tid: 'MongoDB ObjectId'\r\n\t\t\t}\r\n\r\n\t3. Request body:\r\n\r\n\t\t\t{\r\n\t\t\t\tmessage : {\r\n\t\t\t\t\ttext: String\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t4. Request headers:\r\n\r\n\t\t\t{\r\n\t\t\t\tContent-Type : \"application/json\",\r\n\t\t\t\tAccept : \"application/json\",\r\n\t\t\t\tX-ZUMO-AUTH : \"auth_token\"\r\n\t\t\t}\r\n\r\n\t5. Response:\r\n\r\n\t\t\t{\r\n\t\t\t\tsuccess : Boolean\r\n\t\t\t}\r\n\r\n\t6. Additional Info:\r\n\t\t- message.user.social_id will be filled up by the server\r\n\t\t- time will be current expiry time\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}